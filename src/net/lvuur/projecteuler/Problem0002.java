package net.lvuur.projecteuler;

public class Problem0002 {
	/*
	 * Problem 2: Even Fibonacci numbers
	 * 
	 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
	 */
	
	public static void main(String[] args) {
		int last = 1;
		int current = 2;
		int max = 4000000;
		int total = 2; //Total starts at 2 because the calculation skips the first 2 values
		
		while(current < max){
			int newN = last + current; //Calculate next Fibonacci number
			last = current;
			current = newN;
			
			if(current % 2 == 0){ //Add the number to the total if it's even (Divideable by 2)
				total += current;
			}
		}
		
		System.out.println(total); //4613732
	}

}
